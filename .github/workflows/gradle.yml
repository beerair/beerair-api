name: BeerAir Api Server Git-Action

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: beerair-api-github-action-bucket
  CODE_DEPLOY_APPLICATION_NAME: beerair-code-deploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: beerair-code-deploy-deployment-group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Start Action
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
          submodules: true

      # Submodule Update
      - name: Git Sumbmodule Update
        run: git submodule update --init --recursive

      # Set JDK Version
      - name: Set Up Jdk 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Modify Permission
      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      # Build Gradle
      - name: Build With Gradle
        run: ./gradlew clean build

      # AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
